

<div class="card-body">
    <EditForm Model="Staff">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="FullName" class="form-label">Full Name</label>
            <InputText @bind-Value="Staff.FullName" class="form-control" placeholder="Full Name" />
            <ValidationMessage For="@(() => Staff.FullName)" />
        </div>
        <div class="form-group">
            <label for="PhoneNumber" class="form-label">Phone Number</label>
            <InputText @bind-Value="Staff.PhoneNumber" class="form-control" placeholder="Phone Number" />
            <ValidationMessage For="@(() => Staff.PhoneNumber)" />
        </div>
        <div class="form-group">
            <label for="Email" class="form-label">Email</label>
            <InputText @bind-Value="Staff.Email" class="form-control" placeholder="Email" />
            <ValidationMessage For="@(() => Staff.Email)" />
        </div>
        <div class="form-group">
                <label for="DepartmentID" class="form-label">Department</label>
                <CustomInputSelect @bind-Value="Staff.DepartmentID" class="form-control">
                    <option>Select Department</option>
                    @foreach (var department in Departments)
                    {
                        <option value="@department.DepartmentID">@department.DepartmentName</option>
                    }
                </CustomInputSelect>
            </div>     
        <div class="form-group">
            <label for="Gender" class="form-label">Gender</label>
            <InputSelect @bind-Value="Staff.Gender" class="form-control" placeholder="Select Gender">
                <option>Select Gender</option>
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="DateOfBirth" class="form-label">Date of Birth</label>
            <InputDate @bind-Value="Staff.DateOfBirth" class="form-control" placaholder="Date of Birth" />
            <ValidationMessage For="@(() => Staff.DateOfBirth)" />
        </div>
        <div class="form-group">
            <InputImage Label="Image" OnSelectedImage="OnSelectedImage" ImageURL="@imageURL" />
        </div>
    </EditForm>
</div>
<div class="card-footer">
    <div class="form-group">
        <button type="button" @onclick="EnterAddress" class="btn btn-outline-info btn-block" style="font-weight: bold">@UpsertButton</button>
        <button type="button" @onclick="CancelMethod" class="btn btn-outline-dark btn-block" style="font-weight: bold">@CancelButton</button>
    </div>
</div>


@code {
    [Parameter]
    public List<DepartmentView> Departments { get; set; } = new List<DepartmentView>();

    [Parameter]
    public StaffView Staff { get; set; } = new StaffView();

    [Parameter]
    public EventCallback EnterAddress { get; set; }

    [Parameter]
    public EventCallback CancelMethod { get; set; }

    [Parameter]
    public string UpsertButton { get; set; }

    [Parameter]
    public string CancelButton { get; set; }

    private string imageURL;

    protected override void OnInitialized()
    {

        if (!string.IsNullOrWhiteSpace(Staff.PhotoPath))
        {
            imageURL = Staff.PhotoPath;
            Staff.PhotoPath = null;
        }

    }

    private void OnSelectedImage(string imageBase64)
    {
        Staff.PhotoPath = imageBase64;
        imageURL = null;
    }
}